// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DynamoDB module functions get 1`] = `
{
  "key": {
    "id": {
      "S": "id",
    },
  },
  "operation": "GetItem",
}
`;

exports[`DynamoDB module functions put 1`] = `
{
  "attributeValues": {
    "value": {
      "N": 10,
    },
  },
  "key": {
    "id": {
      "S": "abc",
    },
  },
  "operation": "PutItem",
}
`;

exports[`DynamoDB module functions remove 1`] = `
{
  "key": {
    "id": {
      "S": "test",
    },
  },
  "operation": "DeleteItem",
}
`;

exports[`DynamoDB module functions scan 1`] = `
{
  "limit": 10,
  "nextToken": "abc",
  "operation": "Scan",
}
`;

exports[`DynamoDB module functions sync 1`] = `undefined`;

exports[`DynamoDB module functions update add 1`] = `
{
  "key": {
    "id": {
      "S": "test",
    },
  },
  "operation": "UpdateItem",
  "update": {
    "expression": "SET #expName_1 = :expValue_1",
    "expressionNames": {
      "#expName_1": "age",
    },
    "expressionValues": {
      ":expValue_1": {
        "N": 10,
      },
    },
  },
}
`;

exports[`DynamoDB module functions update append 1`] = `
{
  "key": {
    "id": {
      "S": "test",
    },
  },
  "operation": "UpdateItem",
  "update": {
    "expression": "SET #expName_1 = list_append(#expName_1, :expValue_1)",
    "expressionNames": {
      "#expName_1": "values",
    },
    "expressionValues": {
      ":expValue_1": {
        "L": [
          {
            "N": 1,
          },
          {
            "N": 2,
          },
          {
            "N": 3,
          },
        ],
      },
    },
  },
}
`;

exports[`DynamoDB operations add 1`] = `
{
  "type": "OPERATION_ADD",
  "value": 10,
}
`;

exports[`DynamoDB operations append 1`] = `
{
  "items": [
    1,
    2,
    3,
  ],
  "type": "OPERATION_APPEND",
}
`;

exports[`DynamoDB operations decrement 1`] = `
{
  "by": 10,
  "type": "OPERATION_DECREMENT",
}
`;

exports[`DynamoDB operations increment 1`] = `
{
  "by": 10,
  "type": "OPERATION_INCREMENT",
}
`;

exports[`DynamoDB operations prepend 1`] = `
{
  "items": [
    1,
    2,
    3,
  ],
  "type": "OPERATION_PREPEND",
}
`;

exports[`DynamoDB operations replace 1`] = `
{
  "type": "OPERATION_REPLACE",
  "value": {
    "a": 10,
  },
}
`;

exports[`DynamoDB operations updateListItem 1`] = `undefined`;

exports[`dynamodb helpers s3 objects four parameter function 1`] = `
{
  "S": "{"s3":{"key":"foo","bucket":"bar","region":"baz","version":"beep"}}",
}
`;

exports[`dynamodb helpers s3 objects fromS3ObjectJson 1`] = `undefined`;

exports[`dynamodb helpers s3 objects three parameter function 1`] = `
{
  "S": "{"s3":{"key":"foo","bucket":"bar","region":"baz"}}",
}
`;

exports[`dynamodb helpers toBinary 1`] = `
{
  "B": "foo",
}
`;

exports[`dynamodb helpers toBinarySet 1`] = `
{
  "BS": [
    "foo",
    "bar",
    "baz",
  ],
}
`;

exports[`dynamodb helpers toBoolean 1`] = `
{
  "BOOL": true,
}
`;

exports[`dynamodb helpers toDynamoDB boolean 1`] = `
{
  "BOOL": true,
}
`;

exports[`dynamodb helpers toDynamoDB number 1`] = `
{
  "N": 12345,
}
`;

exports[`dynamodb helpers toDynamoDB string 1`] = `
{
  "S": "test",
}
`;

exports[`dynamodb helpers toList 1`] = `
{
  "L": [
    {
      "S": "foo",
    },
    {
      "N": 123,
    },
    {
      "M": {
        "bar": {
          "S": "baz",
        },
      },
    },
  ],
}
`;

exports[`dynamodb helpers toMap 1`] = `
{
  "M": {
    "baz": {
      "N": 1234,
    },
    "beep": {
      "L": [
        {
          "S": "boop",
        },
      ],
    },
    "foo": {
      "S": "bar",
    },
  },
}
`;

exports[`dynamodb helpers toMapValues 1`] = `
{
  "baz": {
    "N": 1234,
  },
  "beep": {
    "L": [
      {
        "S": "boop",
      },
    ],
  },
  "foo": {
    "S": "bar",
  },
}
`;

exports[`dynamodb helpers toNull 1`] = `
{
  "NULL": null,
}
`;

exports[`dynamodb helpers toNumber 1`] = `
{
  "N": 12345,
}
`;

exports[`dynamodb helpers toNumberSet 1`] = `
{
  "NS": [
    1,
    23,
    4.56,
  ],
}
`;

exports[`dynamodb helpers toString 1`] = `
{
  "S": "test",
}
`;

exports[`dynamodb helpers toStringSet 1`] = `
{
  "SS": [
    "foo",
    "bar",
    "baz",
  ],
}
`;
